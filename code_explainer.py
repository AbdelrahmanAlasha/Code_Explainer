# -*- coding: utf-8 -*-
"""code_explainer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c9X_lTpH0PYD1RaPkzv9xtUnVjSegJ_6
"""

#install packages
!pip install transformers accelerate

#upload the code file
from google.colab import files

uploaded = files.upload()
file_name = next(iter(uploaded))
with open(file_name, "r", encoding="utf-8") as f:
    code = f.read()

print(f"âœ… Uploaded: {file_name}\n")
print(code[:500])  #Show summary

from transformers import pipeline
#import falcon model
llm = pipeline("text-generation", model="tiiuae/falcon-7b-instruct", max_new_tokens=512)

#Code explainer Line by Line
def explain_line_by_line(code_str):
    prompt = f"""
You are a code assistant. Explain the following Python code line by line in simple terms.

Code:
{code_str}

Explanation:
"""
    return llm(prompt)[0]["generated_text"]

#Extract functions from the code to explain each one alone
import re

def extract_functions(code_str):
    pattern = re.compile(r"(def\s+[a-zA-Z_][\w]*\(.*?\):[\s\S]+?)(?=^def\s|\Z)", re.MULTILINE)
    return pattern.findall(code_str)

def explain_functions(functions):
    explanations = []
    for fn in functions:
        prompt = f"""
You are a Python expert. Summarize what the following function does in 2â€“3 sentences.

Function:
{fn}

Summary:
"""
        response = llm(prompt)[0]["generated_text"]
        explanations.append((fn, response))
    return explanations

#Summarization of the whole script
def summarize_script(code_str):
    prompt = f"""
You are a senior developer. Summarize what this entire Python script does in 3â€“5 sentences.

Script:
{code_str}

Summary:
"""
    return llm(prompt)[0]["generated_text"]

# Line-by-line explanation
print("ðŸ“˜ Line-by-line explanation:\n")
print(explain_line_by_line(code))

# Function-level explanation
print("\nðŸ§  Function summaries:\n")
functions = extract_functions(code)
func_summaries = explain_functions(functions)
for fn_code, explanation in func_summaries:
    print("ðŸ”¹ Function:\n", fn_code)
    print("ðŸ“„ Summary:\n", explanation)
    print("â€”" * 40)

# Full script summary
print("\nðŸ“„ Full script summary:\n")
print(summarize_script(code))

